{"version":3,"sources":["node_modules/axis/axis/reset.styl","node_modules/axis/node_modules/nib/lib/nib/flex.styl","node_modules/axis/node_modules/nib/lib/nib/vendor.styl","node_modules/axis/node_modules/nib/lib/nib/border.styl","node_modules/axis/node_modules/nib/lib/nib/overflow.styl","node_modules/axis/axis/typography.styl","assets/css/0-utilities/_fonts.styl","assets/css/1-base/_base.styl","assets/css/2-modules/_icons.styl","node_modules/axis/axis/utilities.styl","node_modules/axis/axis/vendor.styl","assets/css/2-modules/_masthead.styl","assets/css/2-modules/_coolform.styl","assets/css/2-modules/_masonry.styl","assets/css/2-modules/_footer.styl"],"names":[],"mappings":"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","sourcesContent":["// -----\n// Reset\n// -----\n\n// global-reset delegated to nib\n\nsupport-for-ie ?= true\n\n// Mixin: Normalize CSS\n// Based on v3.0.1 https://github.com/necolas/normalize.css\n\nnormalize-css()\n  html\n    font-family: sans-serif\n    -ms-text-size-adjust: 100%\n    -webkit-text-size-adjust: 100%\n\n  body\n    margin: 0\n\n  article, aside, details, figcaption, figure, footer, header, hgroup, main, nav, section, summary\n    display: block\n\n  audio, canvas, progress, video\n    display: inline-block\n    vertical-align: baseline\n\n  audio:not([controls])\n    display: none\n    height: 0\n\n  [hidden], template\n    display: none\n\n  a\n    background: transparent\n\n    &:active, &:hover\n      outline: 0\n\n  abbr[title]\n    border-bottom: 1px dotted\n\n  b, strong\n    font-weight: bold\n\n  dfn\n    font-style: italic\n\n  h1\n    font-size: 2em\n    margin: 0.67em 0\n\n  mark\n    background: #ff0\n    color: #000\n\n  small\n    font-size: 80%\n\n  sub, sup\n    font-size: 75%\n    line-height: 0\n    position: relative\n    vertical-align: baseline\n\n  sup\n    top: -0.5em\n\n  sub\n    bottom: -0.25em\n\n  img\n    border: 0\n\n  svg:not(:root)\n    overflow: hidden\n\n  figure\n    margin: 1em 40px\n\n  hr\n    -moz-box-sizing: content-box\n    box-sizing: content-box\n    height: 0\n\n  pre\n    overflow: auto\n\n  code, kbd, pre, samp\n    font-family: monospace, monospace\n    font-size: 1em\n\n  button, input, optgroup, select, textarea\n    color: inherit\n    font: inherit\n    margin: 0\n\n  button\n    overflow: visible\n\n  button, select\n    text-transform: none\n\n  button, html input[type=\"button\"], input[type=\"reset\"], input[type=\"submit\"]\n    -webkit-appearance: button\n    cursor: pointer\n\n  button[disabled], html input[disabled]\n    cursor: default\n\n  button::-moz-focus-inner, input::-moz-focus-inner\n    border: 0\n    padding: 0\n\n  input\n    line-height: normal\n\n  input[type=\"checkbox\"], input[type=\"radio\"]\n    box-sizing: border-box\n    padding: 0\n\n  input[type=\"number\"]::-webkit-inner-spin-button, input[type=\"number\"]::-webkit-outer-spin-button\n    height: auto\n\n  input[type=\"search\"]\n    -webkit-appearance: textfield\n    -moz-box-sizing: content-box\n    -webkit-box-sizing: content-box\n    box-sizing: content-box\n\n  input[type=\"search\"]::-webkit-search-cancel-button, input[type=\"search\"]::-webkit-search-decoration\n    -webkit-appearance: none\n\n  fieldset\n    border: 1px solid #c0c0c0\n    margin: 0 2px\n    padding: 0.35em 0.625em 0.75em\n\n  legend\n    border: 0\n    padding: 0\n\n  textarea\n    overflow: auto\n\n  optgroup\n    font-weight: bold\n\n  table\n    border-collapse: collapse\n    border-spacing: 0\n\n  td, th\n    padding: 0\n","/*\n * Vendor \"display: flex\" support with fallback to obsolete versions.\n */\n\nflex-version ?= box flex\n\n//\n// 1. Display values\n//    - http://www.w3.org/TR/css3-flexbox/#flex-containers\n//\ndisplay(type, args...)\n  if flex == type || inline-flex == type\n    if box in flex-version\n      if flex == type\n        display: -ms-flexbox args\n        display: vendor-value(box args, only: moz webkit)\n      else\n        display: -ms-inline-flexbox args\n        display: vendor-value(inline-box args, only: moz webkit)\n    if flex in flex-version\n      display: vendor-value(arguments, only: webkit official) // overwrites old webkit\n  else\n    display: arguments\n\n/*\n * New syntax for browsers like Google Chrome.\n * Plus a translation to the old syntax, if possible.\n */\n\n\n//\n// 5. Ordering and Orientation\n//    - http://www.w3.org/TR/css3-flexbox/#ordering-and-orientation\n//\n-flex-obsolete-direction(direction)\n  if box in flex-version\n    if row-reverse == direction || column-reverse == direction\n      vendor('box-direction', reverse, ignore: ms official)\n\n    if row == direction || row-reverse == direction\n      vendor('box-orient', horizontal, ignore: ms official)\n    else if column == direction || column-reverse == direction\n      vendor('box-orient', vertical, ignore: ms official)\n\n-flex-obsolete-wrap(value)\n  if box in flex-version\n    // WARN: wrap-reverse does not have a box equivalent. This will render in different manners\n    //    on box vs. flex values.\n    if 'wrap' == value || wrap-reverse == value\n      vendor('box-lines', multiple, ignore: ms official)\n    else if nowrap == value\n      vendor('box-lines', single, ignore: ms official)\n\nflex-direction(direction)\n  // obsolete\n  -flex-obsolete-direction(direction)\n\n  // new\n  if flex in flex-version\n    vendor('flex-direction', arguments, only: webkit ms official)\n\nflex-wrap(value)\n  // obsolete\n  -flex-obsolete-wrap(value)\n\n  if flex in flex-version\n    vendor('flex-wrap', arguments, only: webkit ms official)\n\nflex-flow()\n  // obsolete\n  -flex-obsolete-direction(arguments[0])\n  -flex-obsolete-direction(arguments[1])\n  -flex-obsolete-wrap(arguments[0])\n  -flex-obsolete-wrap(arguments[1])\n\n  // new\n  if flex in flex-version\n    vendor('flex-flow', arguments, only: webkit ms official)\n\n\norder()\n  // obsolete\n  if box in flex-version\n    vendor('box-ordinal-group', arguments, ignore: ms official)\n\n  // new\n  if flex in flex-version\n    vendor('flex-order', arguments, only: ms)\n    vendor('order', arguments, only: webkit official)\n\n\n//\n// 7. Flexibility\n//    - http://www.w3.org/TR/css3-flexbox/#flexibility\n//\nflex-grow(growth)\n  // obsolete\n  if box in flex-version\n    vendor('box-flex', growth)\n\n  // new\n  if flex in flex-version\n    vendor('flex-grow', arguments, only: webkit official)\n\nflex-basis()\n  if flex in flex-version\n    vendor('flex-basis', arguments, only: webkit official)\n\nflex-shrink()\n  if flex in flex-version\n    vendor('flex-shrink', arguments, only: webkit official)\n\nflex(growth)\n\n  // obsolete\n  if box in flex-version\n    shrink = 1\n\n    if none == growth || initial == growth\n      // Well known values\n      shrink = 0 if none == growth\n      growth = 0\n    else if is-width(growth) == true\n      // Basis is defined as the first parameter\n      growth = arguments[1] || 0\n      shrink = arguments[2] if 3 <= length(arguments)\n    else if arguments[1] && is-width(arguments[1]) == false\n      // Growth is first and shrink is second\n      shrink = arguments[1]\n\n    // Since we can't make the distinction between growing and shrinking in the box model, take\n    // the one that provides the most flexibility.\n    vendor('box-flex', max(growth, shrink), ignore: ms)\n\n  // new\n  if flex in flex-version\n    vendor('flex', arguments, only: webkit ms official)\n\n\n// converts the justification alignment\n-convert-justify(align)\n  if flex-start == align\n    return start\n  else if flex-end == align\n    return end\n  else if space-around == align\n    return distribute\n  else if space-between == align\n    return justify\n  else\n    return align\n\n//\n// 8. Alignment\n//    - http://www.w3.org/TR/css3-flexbox/#alignment\n//\njustify-content(align)\n  // obsolete\n  if box in flex-version\n    vendor('box-pack', -convert-justify(align), ignore: ms official)\n\n  // new\n  if flex in flex-version\n    vendor('flex-pack', -convert-justify(align), only: ms)\n    vendor('justify-content', align, only: webkit official)\n\nalign-content(align)\n  // WARN: Obsolete spec does not allow for adjustment here\n  if flex in flex-version\n    vendor('flex-line-pack', -convert-justify(align), only: ms)\n    vendor('align-content', align, only: webkit official)\n\n// converts alignment from 'flex' to normal value\n-convert-alignment(align)\n  if flex-start == align\n    return start\n  else if flex-end == align\n    return end\n  else\n    return align\n\nalign-items(align)\n  // obsolete\n  if box in flex-version\n    vendor('box-align', -convert-alignment(align), ignore: ms official)\n\n  // new\n  if flex in flex-version\n    vendor('flex-align', -convert-alignment(align), only: ms)\n    vendor('align-items', arguments, only: webkit official)\n\nalign-self(align)\n  // WARN: Obsolete spec does not allow for overriding alignment on individual items.\n  if flex in flex-version\n    vendor('align-self', align, only: webkit official)\n    vendor('flex-item-align', -convert-alignment(align), only: ms)\n","use('../nodes/vendor-helpers.js')\n@import 'config'\n\n/*\n * Alias \"nowrap\" as \"no-wrap\".\n */\n\nno-wrap = unquote('nowrap')\n\n/*\n * Helper to find out if a given value is a width\n */\n\nis-width(val)\n  if auto == val\n    return true\n  else if val && 'unit' == type(val)\n    // Stylus does not short circuit so we need to perform this as a distinct\n    // operation to prevent errors\n    return '' != unit(val)\n  return false\n\n/*\n * Vendor support for the given prop / arguments, optionally specifying the\n * only prefixes to utilize, or those which should be ignored.\n */\n\nvendor(prop, args, only = null, ignore = null, vendor-property = true)\n  need_normalize = !vendor-property or prop in ('transition' 'transition-property' 'border-image' 'border-image-slice')\n  for prefix in vendor-prefixes\n    unless (only and !(prefix in only)) or (ignore and prefix in ignore)\n      if official == prefix\n        if need_normalize\n          {prop}: normalize(prop,('%s' % args))\n        else\n          {prop}: args\n      else\n        newprop = prop\n        newprop = '-' + prefix + '-' + prop if vendor-property\n\n        if need_normalize\n          {newprop}: normalize(prop,('%s' % args),prefix)\n        else\n          {newprop}: args\n/*\n * Vendorize the given value.\n */\n\nvendor-value(arg, only = null, ignore = null)\n  prop = current-property[0]\n  for prefix in vendor-prefixes\n    unless (only and !(prefix in only)) or (ignore and prefix in ignore) or official == prefix\n      add-property(prop, '-%s-%s' % (prefix arg))\n  arg\n\n/*\n * Vendor \"box-shadow\" support.\n */\n\nbox-shadow()\n  vendor('box-shadow', arguments, only: webkit official)\n\n/*\n * Vendor \"user-select\" support.\n */\n\nuser-select()\n  vendor('user-select', arguments, only: webkit moz ms official)\n\n/*\n * Vendor \"column-count\" support.\n */\n\ncolumn-count()\n  vendor('column-count', arguments, only: webkit moz official)\n\n/*\n * Vendor \"column-gap\" support.\n */\n\ncolumn-gap()\n  vendor('column-gap', arguments, only: webkit moz official)\n\n/*\n * Vendor \"column-rule\" support.\n */\n\ncolumn-rule()\n  vendor('column-rule', arguments, only: webkit moz official)\n\n/*\n * Vendor \"column-rule-color\" support.\n */\n\ncolumn-rule-color()\n  vendor('column-rule-color', arguments, only: webkit moz official)\n\n/*\n * Vendor \"column-rule-width\" support.\n */\n\ncolumn-rule-width()\n  vendor('column-rule-width', arguments, only: webkit moz official)\n\n/*\n * Vendor \"column-rule-style\" support.\n */\n\ncolumn-rule-style()\n  vendor('column-rule-style', arguments, only: webkit moz official)\n\n/*\n * Vendor \"column-width\" support.\n */\n\ncolumn-width()\n  vendor('column-width', arguments, only: webkit moz official)\n\n/*\n * Vendor \"column-span\" support.\n */\n\ncolumn-span()\n  vendor('column-span', arguments, only: webkit official)\n\n/*\n * Vendor \"column-fill\" support.\n */\n\ncolumn-fill()\n  vendor('column-fill', arguments, only: moz)\n\n/*\n * Legacy syntax support for background-clip and background-origin\n */\n\nlegacy-bg-values(property, args)\n  legacy_args = ()\n  importance = unquote('')\n  for subargs in args\n    for arg in subargs\n      if arg in (border-box padding-box content-box)\n        arg = unquote('border')  if arg == border-box\n        arg = unquote('padding') if arg == padding-box\n        arg = unquote('content') if arg == content-box\n      if arg != '!important'\n        push(legacy_args,arg)\n      else\n        importance = !important\n  vendor(property, unquote(join(', ',legacy_args)) importance, only: moz webkit)\n\n/*\n * Vendor \"background-clip\" support.\n */\n\nbackground-clip()\n  if arguments[0] == text\n    vendor('background-clip', arguments, only: webkit)\n  else\n    legacy-bg-values('background-clip', arguments)\n    background-clip: arguments\n\n/*\n * Vendor \"background-origin\" support.\n */\n\nbackground-origin()\n  legacy-bg-values('background-origin', arguments)\n  background-origin: arguments\n\n/*\n * Vendor \"background-size\" support.\n */\n\nbackground-size()\n  vendor('background-size', arguments, only: webkit moz official)\n\n/*\n * Vendor \"transform\" support.\n */\n\ntransform()\n  vendor('transform', arguments)\n\n/*\n * Vendor \"transform-origin\" support.\n */\ntransform-origin()\n    vendor('transform-origin', arguments)\n\n/*\n * Vendor \"transform-style\" support.\n */\n\ntransform-style()\n  vendor('transform-style', arguments)\n\n/*\n * Vendor \"border-image\" support.\n */\n\nborder-image()\n  vendor('border-image', arguments, only: webkit moz o official)\n\n/*\n * Vendor \"transition\" support.\n */\n\ntransition()\n  vendor('transition', arguments)\n\n/*\n * Vendor \"transition-property\" support.\n */\n\ntransition-property()\n  vendor('transition-property', arguments)\n\n/*\n * Vendor \"transition-duration\" support.\n */\n\ntransition-duration()\n  vendor('transition-duration', arguments)\n\n/*\n * Vendor \"transition-timing-function\" support.\n */\n\ntransition-timing-function()\n  vendor('transition-timing-function', arguments)\n\n/*\n * Vendor \"transition-delay\" support.\n */\n\ntransition-delay()\n  vendor('transition-delay', arguments)\n\n/*\n * Vendor \"backface-visibility\" support.\n */\n\nbackface-visibility()\n  vendor('backface-visibility', arguments, only: webkit moz ms official)\n\n/*\n * Vendor \"perspective\" support.\n */\n\nperspective()\n  if mixin\n    vendor('perspective', arguments, only: webkit moz ms official)\n  else\n    'perspective(%s)' % arguments\n\n/*\n * Vendor \"perspective-origin\" support.\n */\n\nperspective-origin()\n  vendor('perspective-origin', arguments, only: webkit moz ms official)\n\n/*\n * Opacity with conditional IE support.\n */\n\nopacity(n, args...)\n  opacity: n args\n  if support-for-ie\n    if n == inherit or n == initial\n      -ms-filter: n args\n      filter: n args\n    else\n      val = round(n * 100)\n      if val == 100\n        -ms-filter: none args\n        filter: none args\n      else\n        -ms-filter: '\"progid:DXImageTransform.Microsoft.Alpha(Opacity=%s)\"' % val args\n        filter: 'alpha(opacity=%s)' % val args\n\n/*\n * Vendor \"text-size-adjust\"\n */\n\ntext-size-adjust()\n  vendor('text-size-adjust', arguments)\n\n/*\n * Alias the \"white-space\" property.\n */\n\nwhitespace()\n  white-space: arguments\n\n/*\n * Vendor \"box-sizing\" support.\n */\n\nbox-sizing()\n  vendor('box-sizing', arguments, only: webkit moz official)\n\n/*\n * Vendor \"box-orient\" support.\n */\n\nbox-orient()\n  vendor('box-orient', arguments, only: webkit moz official)\n\n/*\n * Vendor \"box-flex-group\" support.\n */\n\nbox-flex-group()\n  vendor('box-flex-group', arguments, only: webkit moz official)\n\n/*\n * Vendor \"box-ordinal-group\" support.\n */\n\nbox-ordinal-group()\n  vendor('box-ordinal-group', arguments, only: webkit moz ms official)\n\n\n/*\n * Vendor \"box-align\" support.\n */\n\nbox-align()\n  vendor('box-align', arguments, only: webkit moz ms official)\n\n/*\n * Vendor \"box-pack\" support.\n */\n\nbox-pack()\n  vendor('box-pack', arguments, only: webkit moz ms official)\n\n/*\n * Vendor \"box-direction\" support.\n */\n\nbox-direction()\n  vendor('box-direction', arguments, only: webkit moz ms official)\n\n/*\n * Vendor \"animation\" support.\n */\n\nanimation()\n  vendor('animation', arguments)\n\n\n/*\n * Vendor \"animation-name\" support.\n */\n\nanimation-name()\n  vendor('animation-name', arguments)\n\n/*\n * Vendor \"animation-duration\" support.\n */\n\nanimation-duration()\n  vendor('animation-duration', arguments)\n\n/*\n * Vendor \"animation-delay\" support.\n */\n\nanimation-delay()\n  vendor('animation-delay', arguments)\n\n/*\n * Vendor \"animation-direction\" support.\n */\n\nanimation-direction()\n  vendor('animation-direction', arguments)\n\n/*\n * Vendor \"animation-iteration-count\" support.\n */\n\nanimation-iteration-count()\n  vendor('animation-iteration-count', arguments)\n\n/*\n * Vendor \"animation-timing-function\" support.\n */\n\nanimation-timing-function()\n  vendor('animation-timing-function', arguments)\n\n/*\n * Vendor \"animation-play-state\" support.\n */\n\nanimation-play-state()\n  vendor('animation-play-state', arguments)\n\n/*\n * Vendor \"animation-fill-mode\" support.\n */\n\nanimation-fill-mode()\n  vendor('animation-fill-mode', arguments)\n\n/*\n * Vendor \"hyphens\" support.\n */\n\nhyphens()\n  vendor('hyphens', arguments, only: webkit moz ms official)\n\n/*\n * Vendor \"appearance\" support.\n */\n\nappearance()\n  vendor('appearance', arguments, only: webkit moz official)\n\n/*\n * Vendor \"tab-size\" support.\n */\n\ntab-size()\n  vendor('tab-size', arguments, only: moz o official)\n\n/*\n * Vendor \"overflow-scrolling\" support.\n */\n\noverflow-scrolling()\n  vendor('overflow-scrolling', arguments, only: webkit official)\n\n/*\n * Vendor \"text-overflow\" support, , -o- for opera 9.* - 10.*\n */\n\ntext-overflow()\n  vendor('text-overflow', arguments, only: official o)\n\n/*\n * Vendor \"text-size-adjust\" support.\n */\ntext-size-adjust()\n  vendor('text-size-adjust', arguments, only: official webkit ms)\n\n/*\n * Vendor \"font-smoothing\" support, webkit only.\n */\nfont-smoothing()\n  vendor('font-smoothing', arguments, only: webkit)\n\n/*\n * Helper for border-radius().\n */\n\n-apply-border-radius(pos, importance)\n  if length(pos) == 3\n    // border-radius: <top | buttom> <left | right> <n>\n    y = pos[0]\n    x = pos[1]\n    // We don't use moz for simple boder-radius anymore\n    // vendor('border-radius-%s%s' % pos, pos[2], only: moz)\n    vendor('border-%s-%s-radius' % pos, pos[2] importance, only: webkit official)\n  else if pos[0] in (top bottom)\n    // border-radius: <top | bottom> <n>\n    -apply-border-radius(pos[0] left pos[1], importance)\n    -apply-border-radius(pos[0] right pos[1], importance)\n  else if pos[0] in (left right)\n    // border-radius: <left | right> <n>\n    unshift(pos, top);\n    -apply-border-radius(pos, importance)\n    pos[0] = bottom\n    -apply-border-radius(pos, importance)\n\n/*\n * border-radius supporting vendor prefixes and\n * augmented behavior.\n *\n * Examples:\n *\n *    border-radius: 2px 5px\n *    border-radius: top 5px bottom 10px\n *    border-radius: left 5px\n *    border-radius: top left 5px\n *    border-radius: top left 10px bottom right 5px\n *    border-radius: top left 10px, bottom right 5px\n *\n */\n\nborder-radius()\n  pos = ()\n  augmented = false\n  importance = arguments[length(arguments) - 1] == !important ? !important : unquote('')\n\n  for args in arguments\n    for arg in args\n      if arg is a 'ident'\n        append(pos, arg)\n        augmented = true\n      else\n        append(pos, arg)\n        if augmented\n          -apply-border-radius(pos, importance)\n          pos = ()\n  vendor('border-radius', pos, only: webkit official) unless augmented\n\n/**\n * Vendor input-placeholder/placeholder support.\n *\n * Examples:\n *    // Default syntax\n *    body\n *      placeholder(color #333, font-weight normal)\n *\n *    // The comma is important\n *    .placeholder-red\n *      placeholder(color red,)\n *\n *    // We can pass a function\n *    green-placeholder()\n *      color green\n *    .placeholder-green\n *      placeholder(green-placeholder)\n *\n *    // We can pass a hash\n *    textarea\n *      placeholder((font-style italic) (font-weight bold) (padding '4px 10px'))\n */\nplaceholder()\n  for v in ':-webkit-input' '-moz' ':-moz' '-ms-input'\n    &:{v}-placeholder\n      for pair in arguments\n        if typeof(pair) == 'function'\n          pair()\n        else if pair is not null && pair[0] is not null\n          {pair[0]}: type(pair[1]) == 'string' ? s(pair[1]) : pair[1]\ninput-placeholder = placeholder\n\n/*\n * Vendor background support (gradients).\n */\n\nbackground()\n  if match('-gradient\\(', ''+arguments)\n    vendor('background', arguments, vendor-property: false)\n  else\n    background arguments\n\nbackground-image()\n  if match('-gradient\\(', ''+arguments)\n    vendor('background-image', arguments, vendor-property: false)\n  else\n    background-image arguments\n\ncursor()\n  if match('-gradient\\(', ''+arguments)\n    vendor('cursor', arguments, vendor-property: false)\n  else\n    cursor arguments\n\nlist-style()\n  if match('-gradient\\(', ''+arguments)\n    vendor('list-style', arguments, vendor-property: false)\n  else\n    list-style arguments\n\nlist-style-image()\n  if match('-gradient\\(', ''+arguments)\n    vendor('list-style-image', arguments, vendor-property: false)\n  else\n    list-style-image arguments\n","/*\n * border: <color>\n * border: ...\n */\n\nborder(color, args...)\n  if color is a 'color'\n    border: 1px solid color args\n  else\n    border: arguments\n","/*\n * Overflow utility. Maps to regular overflow, and adds an ellipsis value.\n *\n * Synopsis:\n *\n *   overflow: <type>\n *\n * Examples:\n *\n *     overflow: auto\n *     overflow: hidden\n *     overflow: ellipsis\n *\n */\n\noverflow()\n  if arguments[0] == ellipsis\n    ellipsis()\n  else\n    overflow: arguments\n","// ----------\n// Typography\n// ----------\n\n// Function: Line Height\n// \n// If there is a font-size set on the parent element, adjusts the line height to \n// match that. If not, it uses the base font-size to calculate the line-height.\n\n-line-height()\n  if @font-size\n    line-height: 1.6em\n  else\n    line-height: unit(font-size*1.6, 'px')\n    line-height: 1.6rem\n\n// Mixin: Text Margin\n// \n// Puts nice visually pleasing top and bottom margins on a paragraph of text.\n// Put a font-size on your element to have it adjust accordingly.\n// \n// ex. p\n//       font-size: 18px\n//       text-margin()\n\ntext-margin(size=font-size)\n  if @font-size\n    margin: .75em 0\n  else\n    margin: unit(font-size*.75, 'px') 0\n\n// Mixin: Paragraph\n// \n// Sets a nice size, line-height, and margins on a paragraph of text. Pass a\n// size in to customize. Toggle margins off if you don't want them.\n// \n// ex. p()\n// ex. p: 18px\n// ex. p: 14px false\n\np(size=1rem, margins = true)\n  font-size: size\n  text-margin() if margins\n  -line-height()\n  openTypeLigatures() if ligatures\n\n// Alias: paragraph\nparagraph = p\n\n// Alias: Font Size\n// An alias for 'font-size' with auto-fallback for rem.\n// ex. fs: 16px\n// ex. fs: 1.2rem\n\nfs(size)\n  if (unit(size) == 'rem')\n    font-size: round(unit((font-size*size), 'px'))\n    font-size: size\n  else\n    font-size: size\n\n// Alias: Uppercase\n// An alias for 'text-transform: uppercase'\n// ex. uppercase()\n\nuppercase()\n  text-transform: uppercase\n\n// Alias: Upcase\nupcase = uppercase\n\n// Alias: Lowercase\n// An alias for 'text-transform: lowercase'\n// ex. lowercase()\n\nlowercase()\n  text-transform: lowercase\n\n// Alias: Downcase\ndowncase = lowercase\n\n// Alias: Reset Case\n// Gets rid of an text transform\n// ex. reset-case()\n\nreset-case()\n  text-transform: none\n\n// Mixin: Small\n// \n// Makes your text smaller and a little lighter. Great on <small /> tags.\n// \n// ex. small()\n\nsmall()\n  font-size: 55%\n  opacity: .6\n  font-weight: normal\n\n// Function: Heading\n// For internal use within headings\n\n-heading(multiplier)\n  font-size: unit((font-size*multiplier), 'px')\n  font-size: unit(multiplier, 'rem')\n  text-rendering: optimizelegibility\n  font-weight: bold\n  text-margin()\n  -line-height()\n  openTypeLigatures() if ligatures\n\n// Mixin Set: h1, h2, h3, h4, h5, h6\n// \n// These provide nice defaults for headings based off the default font size.\n// The can scale infinitely, and work best when matched to their corresponding\n// html elements. If you'd like to change the base size of a header, just pass\n// it as an option.\n// \n// ex. h3()\n// ex. h3: 3.5\n\nh1(size=2.4)\n  -heading(size)\n\nh2(size=1.8)\n  -heading(size)\n\nh3(size=1.5)\n  -heading(size)\n\nh4(size=1.3)\n  -heading(size)\n\nh5(size=1.0)\n  -heading(size)\n\nh6(size=0.9)\n  -heading(size)\n  upcase()\n\n// Mixin: Link\n// \n// A nice default style for links. Accepts a color and a style. Color can be\n// anything, style can be underline, darken, lighten, or glow, each giving it a\n// different style of interaction when hovered. More suggestions here welcome.\n// \n// ex. link()\n// ex. link: green\n// ex. link: #57777E 'glow'\n\nlink(color=blue, style='underline')\n  color: color\n  text-decoration: none\n  transition()\n\n  if style == 'underline'\n    hover-underline()\n    &:hover\n      color: darken(@color, 15%)\n  else if style == 'darken'\n    &:hover\n      color: darken(@color, 20%)\n  else if style == 'lighten'\n    hover-lighten()\n  else if style == 'glow'\n    &:hover\n      text-shadow: 0 0 7px rgba(color, .6)\n      \n  &:visited\n    opacity: .8\n\n// Mixin: Reset Link\n// \n// Sometimes my link mixin of the browser defaults will give you questionable\n// link defaults that you don't want on certain elements. This guy gets rid of\n// that.\n\n// ex. reset-link()\n\nreset-link()\n  border: none\n  text-decoration: none\n  color: initial\n  \n  &:hover\n    border: none\n    text-decoration: none\n    color: initial\n    \n  &:visited\n    opacity: 1\n\n// Mixin: Text Selection\n// \n// This guy sets the text select color intelligently based on the\n// highlight-color variable found in the settings file. If you really want, you\n// can pass it a color override too.\n\n// ex. text-selection()\n\ntext-selection(color=highlight-color, textColor=null)\n  textColor = (light(color) ? white : #494949) unless textColor\n\n  &::-moz-selection\n    background: color\n    color: textColor\n    \n  &::selection\n    background: color\n    color: textColor\n\n// Mixin: Ul\n// \n// A nice default for list styles. More or less the same as browser defaults,\n// scales nicely. You can pass it any style that list-style-type would normally\n// take. Defaults to disc. Use this on a ul element por favor.\n// \n// ex. ul()\n// ex. ul: 'square'\n\nul(style='disc')\n  margin: 5px 15px\n  margin: 0.32rem 0.94rem\n  padding-left: 1rem\n\n  li\n    list-style-type: unquote(style)\n    padding: 2px 0\n    padding: 0.125rem\n\n// Mixin: Ol\n// \n// A nice default for list styles. More or less the same as browser defaults,\n// scales nicely. You can pass it any style that list-style-type would normally\n// take. Defaults to decimal. Use this on a ol element por favor.\n// \n// ex. ol()\n// ex. ol: 'upper-roman'\n\nol(style='decimal')\n  margin: 5px 18px\n  margin: 0.32rem 1.125rem\n  padding-left: 1rem\n\n  li\n    list-style-type: unquote(style)\n    padding: 2px 0\n    padding: 0.125rem\n\n// Mixin: Inline List\n// \n// For when you need your list to be horizontal. Pass it the spacing you want\n// between list elements, whatever units you'd like. Defaults to 20px.\n// \n// ex. inline-list()\n// ex. inline-list: 15px\n\ninline-list(spacing=20px)\n  group()\n  margin: 0\n  padding: 0\n\n  li\n    float: left\n    margin-right: spacing\n    list-style-type: none\n\n  li:last-child\n    margin-right: 0\n\n// Mixin: Reset List\n// \n// If you're tired of all the list shenanigans and want to get rid of them for\n// this special list you're working on, this is your guy. Resets the margins,\n// padding, and style.\n// \n// ex. reset-list()\n\nreset-list()\n  margin: 0\n  padding: 0\n\n  li\n    float: none\n    list-style-type: none\n    padding: 0\n    margin: 0\n\n// Mixin: Blockquote\n// \n// Nice styles for a blockquote, and even puts a nice hyphen in before your\n// citation. Use with a <p> and <cite>, <footer>, or <figcaption> inside for\n// best results. Pass a color or 'none' to set the left border.\n// \n// ex. blockquote()\n\nblockquote(color=blue)\n  border-left: 4px solid color\n  margin: 1em 0\n  padding-left: 1.5em\n  group()\n\n  > p\n    font-weight: 300\n    font-size: 127%\n    font-size: 1.27rem\n    line-height: 127%\n    line-height: 1.27rem\n    margin-top: 0\n\n  > cite, > footer, > figcaption\n    color: #888888\n    &:before\n      content: '\\2014'\n\n// Alias: blockquo\nblockquo = blockquote\n\n// Hyphenation\n// \n// Hyphenation is the better word-break. It’s locale aware, and inserts the\n// hyphen character at the correct place, when breaking the words. This is\n// especially important in responsive designs. It will save you from a lot of\n// ragged lines. And, no need anymore for clunky & slow Javascript hyphenation\n// fallbacks. Taken from http://www.newnet-soft.com/blog/csstypography\n// \n// ex. hyphenation()\n\nhyphenation()\n    -ms-word-break: break-all\n    word-break:     break-all\n    word-break:     break-word // webkit\n    hyphens: auto // none, auto, <number>\n    -webkit-hyphenate-before: 2\n    -webkit-hyphenate-after:  3\n    hyphenate-lines:          3\n\n// Additive Mixin: Base\n// \n// WARNING: Creates classes in your css and styles them - not to be used inside\n// an element.\n// \n// This is an essential mixin. You want this on your page. Sets your font stack,\n// size, and colors based on the settings file and makes sure that your text is\n// a great looking as possible. You can override any of the params, but there is\n// really no reason to.\n// \n// ex. base()\n\nbase(fonts=font-stack, size=font-size, color=font-color)\n  html\n    font-size: unit(size, 'px')\n    font-size: unit((size/16)*100, \"%\")\n\n  body\n    font-family: fonts\n    color: color\n    -webkit-font-smoothing: antialiased\n    -webkit-text-size-adjust: 100%\n    -ms-text-size-adjust: 100%\n    font-size-adjust: auto\n\n// Additive Mixin: Headers\n// \n// WARNING: Creates classes in your css and styles them - not to be used inside\n// an element.\n// \n// Adds roots' wonderful scaling header styles to your <hx> tags.\n// \n// ex. headers()\n\nheaders()\n  h1\n    h1()\n\n  h2\n    h2()\n\n  h3\n    h3()\n\n  h4\n    h4()\n\n  h5\n    h5()\n\n  h6\n    h6()\n\n// Additive Mixin: Lists\n// \n// WARNING: Creates classes in your css and styles them - not to be used inside\n// an element.\n// \n// Adds roots' styles to ul and ols.\n// \n// ex. lists()\n\nlists()\n  ul\n    ul()\n  ol\n    ol()\n\n// Additive Mixin: Bold-Italic\n// \n// WARNING: Creates classes in your css and styles them - not to be used inside\n// an element.\n// \n// Adds bold and italic styles to the right tags if you did a global reset.\n// \n// ex. bold-italic()\n\nbold-italic()\n  b\n    bold()\n  i\n    italic()\n  strong\n    bold()\n  em\n    italic()\n\n// Additive Mixin: Typography\n// \n// WARNING: Creates classes in your css and styles them - not to be used inside\n// an element.\n// \n// Adds roots' styles to bold and italic elements, headers, paragrapgs, small\n// text, links, lists, and blockquotes. Got all your basic elements covered.\n// \n// ex. typography()\n\ntypography()\n  bold-italic()\n  headers()\n  lists()\n  text-selection()\n\n  p\n    paragraph()\n\n  small\n    small()\n\n  a\n    link()\n\n  blockquote\n    blockquo()\n  \n  .hyphenation\n    hyphenation()\n","// ==========================================================================\n// $FONT-FACE\n// ==========================================================================\nif variable-exists(google-fonts-url)\n  @import url($google-fonts-url)\nif variable-exists(fonts)\n  for $font-face in $fonts\n    @font-face\n      font-family: $font-face\n      src: url(\"/assets/fonts/{$font-face}.eot\")\n      // IE9 Compat Modes\n      src: url(\"/assets/fonts/{$font-face}.eot?#iefix\") format(\"embedded-opentype\"), url(\"/assets/fonts/{$font-face}.woff\") format(\"woff\"), url(\"/assets/fonts/{$font-face}.ttf\") format(\"truetype\"), url(\"/assets/fonts/{$font-face}.svg#{$font-face}\") format(\"svg\")\n      // Legacy iOS\n      font-style: normal\n      font-weight: normal\n","body\n\t-webkit-font-smoothing: antialiased\nh1, h2, h3, h4, h5, h6\n\tfont-family: 'Lustria'\n\np\n\tfont-family: 'Lato'\n",".social-icons\n\tvertically-align()\n\tfont-size: 1.6rem\n\tdesktop\n\t\tfloat: right\n\t\tpadding-right: 1.5em\n\tdiv\n\t\tdisplay: inline-block\n\t\tpadding: 0 0.4rem\n[class^=\"icon-\"], [class*=\" icon-\"]\n\tfont-family: \"icomoon\"\n\tfont-color: $grey-dark\n\tfont-speak: none\n\tfont-style: normal\n\tfont-weight: normal\n\tfont-variant: normal\n\ttext-transform: none\n\tline-height: 1\n\ttext-decoration: none\n\tfont-feature-settings: \"liga\"\n\t-webkit-font-smoothing: antialiased\n\t-moz-osx-font-smoothing: grayscale\n.icon-behance\n\tfont-size: 1em\n\tcolor: white\n\tbackground-color: $grey-dark\n\tborder-radius: 50%\n\t&:before\n\t\tcontent: \"\\e601\"\n\t&:hover\n\t\tbackground-color: black\n.icon-google-plus\n\t&:before\n\t\tcontent: \"\\ea8a\"\n\t&:hover\n\t\tcolor: #ab241e\n.icon-facebook\n\t&:before\n\t\tcontent: \"\\ea8e\"\n\t&:hover\n\t\tcolor: #38488b\n.icon-twitter\n\t&:before\n\t\tcontent: \"\\ea93\"\n\t&:hover\n\t\tcolor: #5097ed\n.icon-github\n\t&:before\n\t\tcontent: \"\\eab1\"\n\t&:hover\n\t\tcolor: #6b006d\n.icon-btn-next:before\n\tcontent: \"\\e607\"\n.icon-btn-prev:before\n\tcontent: \"\\e606\"\n","// ---------\n// Utilities\n// ---------\n\n// Mixin: Pie\n// When turned on, enables css3 pie (http://css3pie.com/) for all\n// elements that can use it. Which makes IE look a lot nicer.\n\npie()\n  behavior: url(pie-path) if pie-enabled\n\n// Mixin: Rounded\n// \n// Unless you are working with a ridiculously large element, this will round the\n// corners as much as css will allow. Even in IE.\n// \n// ex. rounded()\n\nrounded()\n  border-radius: 999px\n  pie()\n\n// Alias: No Select\n// You can't highlight this.\n\nno-select()\n  -webkit-touch-callout: none\n  user-select: none\n\n// Alias: B\n// Border, but quicker and with an intelligent default.\n\nb()\n  arguments = unquote('1px solid') unless arguments\n  border: arguments\n\n// Mixin: Bg\n// \n// Makes background (with image) declarations a little simpler. Use this with\n// the global img-path variable to set a base image path that you don't have to\n// keep repeating. Also sets 'no-repeat' as the default background-repeat.\n// \n// ex. bg: 'test.png'\n// ex. bg: 'other.jpg' center center repeat\n\nbg(path, args...)\n  args = unquote('no-repeat') unless args\n  background: url(img-path path) args\n\n// Mixin: bg-retina\n// \n// Make sure the image path is double the size, pass it halved numbers, and\n// you're in the retina-clear.\n// \n// ex. bg-retina: 'test.png' 200px 100px\n// ex. bg-retina: 'other.jpg' 100px 50px center center repeat\n\nbg-retina(path, width, height, args...)\n  args = unquote('no-repeat') unless args\n  set_size = false\n  \n  for arg in args\n    if arg == 'no-repeat'\n      set_size = true\n\n  background: url(img-path path) args\n  background-size: width height\n  \n  if set_size\n    size: width height\n\n// Alias: Bold\n// It's just faster to type bold() than font-weight: bold\n\nbold()\n  font-weight: bold\n\n// Alias: Italic\n// It's just faster to type italic() than font-style: italic\n\nitalic()\n  font-style: italic\n\n// Alias: Normal\n// Put the font-weight and style back to normal\n\nnormal()\n  font-weight: normal\n  font-style: normal\n\n// Mixin: Image Replace\n// \n// Image replacement. Pass it an image path and the image's dimensions and any\n// text will be hidden in the div and it will show an image instead. Uses the\n// fanciest new method, props to Paul Irish. Only works when called as a\n// function with parens. Do not try to do it with a colon!\n// \n// ex. ir('test.jpg', 200 400)\n\nimage-replace(path, dimensions...)\n  dimensions = dimensions[0]\n  font: 0/0 a\n  text-shadow: none\n  color: transparent\n  bg: path if path\n  if length(dimensions) > 1\n    width: unit(dimensions[0], 'px')\n    height: unit(dimensions[1], 'px')\n  else\n    warn(\"Make sure you also pass the image dimensions. Example: ir('/img/whatever.jpg', 200px 400px)\")\n\n// Alias: ir\nir = image-replace\n\n// Mixin: Columns\n// \n// For css3 columns. Takes column count (int), column gap (px, em), column width\n// (px, em), and a border-like declaration if you want a column rule. This\n// follows exactly with the css3 spec, it's just quicker.\n// \n// ex. columns()\n// ex. columns: 5\n// ex. columns(8, 15px, 200px, '1px solid red')\n\ncolumns(count=3, gap=30px, width=null, rule=null)\n  column-count: count\n  column-gap: gap\n  column-width: width if width\n  column-rule: unquote(rule) if rule\n\n// Mixin: Avoid Column Break\n// \n// If you have a list that is broken into columns, this will make sure that the\n// list item is not split across columns awkwardly. Works only in webkit at the\n// moment.\n// \n// ex. avoid-column-break()\n\navoid-column-break()\n  column-break-inside: avoid\n\n// Mixin: Triangle\n// \n// One of my favorites. Makes a little css triangle for you. Pass it a direction\n// (up, down, left, right), size (in pixels), and a color.\n// \n// ex. triangle()\n// ex. triangle: 'down' 15px blue\n\ntriangle(direction='up', size=10px, color=#000)\n  width: 0\n  height: 0\n  if direction == 'up'\n    border-left: size solid transparent\n    border-right: size solid transparent\n    border-bottom: size solid color\n  else if direction == 'down'\n    border-left: size solid transparent\n    border-right: size solid transparent\n    border-top: size solid color\n  else if direction == 'left'\n    border-top: size solid transparent\n    border-bottom: size solid transparent\n    border-right: size solid color\n  else if direction == 'right'\n    border-top: size solid transparent\n    border-bottom: size solid transparent\n    border-left: size solid color\n\n// Mixin: Sprite\n// \n// Given a direction in which your sprites are aligned (horizontal/vertical) and\n// an iteration, will measure the width/height of your first sprite frame and\n// step through to the nth next one, depending on the given iteration number.\n// Width/height must be defined for this to work (as is the case for any sprite)\n// \n// ex. sprite: 2\n// ex. sprite: 5 'horizontal'\n// \n// TODO: Try using image-size here if @width or @height aren't defined\n\nsprite(iteration, orientation='vertical')\n  if orientation == 'vertical'\n    background-position: 0 unit(@height*-1*iteration, 'px')\n  else if orientation == 'horizontal'\n    // warn(unit(@width*iteration, 'px'))\n    background-position: unit(@width*iteration, 'px') 0\n\n// Alias: group\n// Clearfix with a better name. Excellent for wrangling floats.\n\ngroup = clearfix\n\n// Alias: Inline Block\n// Cross browser inline block display. Saves many IE headaches.\n\ninline-block()\n  display: inline-block\n\n  if support-for-ie\n    display: -moz-inline-stack\n    vertical-align: baseline\n    zoom: 1\n    *display: inline\n    *vertical-align: auto\n\n// Mixin: Vertically Align\n// \n// Cross browser vertical align. Works down to IE9.\n// \n// ex. vertically-align()\n\nvertically-align()\n  position: relative\n  top: 50%\n  transform: translateY(-50%)\n\n// Mixin: Media\n// \n// Based on Nicole Sullivan's media class, made famous by Facebook\n// http://www.stubbornella.org/content/2010/06/25/the-media-object-saves-\n// hundreds-of-lines-of-code\n// \n// Put this on a parent and it will split the first two children left and right,\n// like you would with perhaps a comment with an avatar to the left. Pass it a\n// margin between the two. Explained fully here:\n// http://carrotblog.com/css-patterns-evolved/\n// \n// This mixin works right when the element you apply it to has two or three\n// direct children. The first one will float to the left, the second one will be\n// to the right of the first, and third will go farthest right.\n// \n// ex. media()\n// ex. media: 15px\n// ex. media: 15px 10px\n\nmedia(margin=10px)\n\n  left-margin = margin\n  right-margin = margin\n\n  if length(arguments) > 1\n    left-margin = arguments[0]\n    right-margin = arguments[1]\n\n  overflow: hidden\n  zoom: 1\n\n  & > *\n    inline-block()\n    overflow: hidden\n  & > *:first-child\n    float: left\n    margin-right: right-margin\n  & > *:nth-child(3)\n    float: right\n    margin-left: left-margin\n\n// Mixin: Raquo\n// \n// Because technically raquo is not semantic, it's better to add it like this.\n// \n// ex. raquo()\n\nraquo()\n  &:after\n    content: \" \\00BB\"\n\n// Mixin: Font Face\n// \n// Super simple font-face declaration. Just give the name and the folder it\n// lives in. Make sure the font name matches the name of the files. Uses the\n// fontspring syntax:\n// http://www.fontspring.com/blog/the-new-bulletproof-font-face-syntax\n// \n// ex. font-face(proxima-nova, '/fonts')\n\nfont-face(name, folder, weight='normal', style='normal')\n  @font-face\n    font-family: name\n    src: url(folder unquote('/') name unquote('.eot') '?#iefix') format('embedded-opentype'), url(folder unquote('/') name unquote('.woff')) format('woff'), url(folder unquote('/') name unquote('.ttf')) format('truetype'), url(folder unquote('/') name unquote('.eot') unquote('#') name) format('svg');\n    font-weight: unquote(weight)\n    font-style: unquote(style)\n\n// Mixin: Debug\n// \n// Debugging tool - drop this at root level in your css and it will put borders\n// on every element so you can see what's up. It will also flag them if you made\n// mistakes like put in inline styles, forgot an alt on an image, left the alt\n// blank, etc. For god's sake don't use this in production. All credit for this\n// goes to intuit.css, from which I adapted it (and improved it a bit).\n// https://github.com/csswizardry/inuit.css\n\ndebug()\n  html\n\n    div\n      border: 1px solid green\n\n    [style], style\n      border: 5px solid yellow\n\n    style\n      border: block\n\n    img\n      border: 5px solid red\n\n    img[alt]\n      border-color: green\n\n    img[alt=\"\"]\n      border-color: yellow\n\n    a\n      border: 5px solid yellow\n\n    a[title]\n      border-color: green\n\n    a[href=\"#\"]\n      outline-color: yellow\n\n    a[target]\n      border-color: red\n\n    [class=\"\"], [id=\"\"]\n      border: 5px solid yellow\n\n// Custom animation timing functions, ported from bourbon\n// https://github.com/thoughtbot/bourbon/blob/master/app/assets/stylesheets/addons/_timing-functions.scss\n\n// ease-in\nease-in-quad =      cubic-bezier(0.550,  0.085, 0.680, 0.530)\nease-in-cubic =     cubic-bezier(0.550,  0.055, 0.675, 0.190)\nease-in-quart =     cubic-bezier(0.895,  0.030, 0.685, 0.220)\nease-in-quint =     cubic-bezier(0.755,  0.050, 0.855, 0.060)\nease-in-sine =      cubic-bezier(0.470,  0.000, 0.745, 0.715)\nease-in-expo =      cubic-bezier(0.950,  0.050, 0.795, 0.035)\nease-in-circ =      cubic-bezier(0.600,  0.040, 0.980, 0.335)\nease-in-back =      cubic-bezier(0.600, -0.280, 0.735, 0.045)\n\n// ease-out\nease-out-quad =     cubic-bezier(0.250,  0.460, 0.450, 0.940)\nease-out-cubic =    cubic-bezier(0.215,  0.610, 0.355, 1.000)\nease-out-quart =    cubic-bezier(0.165,  0.840, 0.440, 1.000)\nease-out-quint =    cubic-bezier(0.230,  1.000, 0.320, 1.000)\nease-out-sine =     cubic-bezier(0.390,  0.575, 0.565, 1.000)\nease-out-expo =     cubic-bezier(0.190,  1.000, 0.220, 1.000)\nease-out-circ =     cubic-bezier(0.075,  0.820, 0.165, 1.000)\nease-out-back =     cubic-bezier(0.175,  0.885, 0.320, 1.275)\n\n// ease-in-out\nease-in-out-quad =  cubic-bezier(0.455,  0.030, 0.515, 0.955)\nease-in-out-cubic = cubic-bezier(0.645,  0.045, 0.355, 1.000)\nease-in-out-quart = cubic-bezier(0.770,  0.000, 0.175, 1.000)\nease-in-out-quint = cubic-bezier(0.860,  0.000, 0.070, 1.000)\nease-in-out-sine =  cubic-bezier(0.445,  0.050, 0.550, 0.950)\nease-in-out-expo =  cubic-bezier(1.000,  0.000, 0.000, 1.000)\nease-in-out-circ =  cubic-bezier(0.785,  0.135, 0.150, 0.860)\nease-in-out-back =  cubic-bezier(0.680, -0.550, 0.265, 1.550)\n\n// Function: cached-image-url\n// \n// An alternative to url() that stores images in a cache for use in\n// cache-images().\n\nbackground-images = null\n\ncached-image-url()\n  base = ''\n  s = unquote('url(\"' + base + join('', arguments) + '\")')\n  push(background-images, s) unless s in background-images\n  url(arguments)\n\n// Mixin: Cache Images\n// Use this at the end of all your styles outputs the image cache script.\n\ncache-images()\n  body:after\n    display: none\n    content: background-images\n","// ------\n// Vendor\n// ------\n\n// Utilities specifically intended for helping with vendor-prefixed\n// css properties\n\n// Alias: Transition\n// \n// Transition with an intelligent default.\n// \n// ex. transition()\n// ex. transition: color 1s ease\n// ex. transition(color 1s ease, background 2.4s linear)\n\ntransition()\n  arguments = unquote('all .3s ease') unless arguments\n  transition: arguments\n\n\n// Alias: Box Shadow\n// \n// Box shadow with pie support, if you are using it.\n// \n// ex. box-shadow: 1px 1px 3px blue\n// ex. box-shadow(1px 1px 3px blue, inset 2px 0 5px rgba(0,0,0,.5))\n\nbox-shadow()\n  box-shadow: arguments\n  pie()\n\n// Alias: Border Radius\n// \n// Border-radius with pie support, if you are using it.\n// \n// ex. +round-corners(5px)\n\nborder-radius()\n  border-radius: arguments\n  pie()\n\n// Alias: Opacity\n// \n// I know, it seems silly. But every time you go to old IE testing you will be\n// thanking yourself for using this instead of the normal opacity declaration.\n// Overrides default opacity.\n// \n// ex. opacity: .6\n\nopacity(opacity)\n  filter: s(\"progid:DXImageTransform.Microsoft.Alpha(Opacity=%s)\", opacity * 100) if support-for-ie\n  opacity: opacity\n\n// Alias: Border Box\n// A quicker way to specify border-box sizing.\n\nborder-box()\n  box-sizing: border-box\n\n// Alises: background-appearance-x and y\n// \n// In case you want to use an unsupported background-position property, this\n// should set you straight!\n\nbackground-position-x(x)\n  background-position: x 0\n\nbackground-position-y(y)\n  background-position: 0 y\n\n// Mixin: Opentype ligatures\n// \n// The vast majority of fonts contain lowercase and uppercase alphabets,\n// numerals, punctuation and accents. // Many professionally-designed fonts\n// also contain ligatures, alternative characters, smallcaps, different kinds of\n// numbers, and sometimes much more besides. This enables it.\n// \n// Source: http://www.newnet-soft.com/blog/csstypography\n// Additional: http://blog.fontdeck.com/post/15777165734/opentype-1\n\nopenTypeLigatures()\n  -moz-font-feature-settings:    \"liga=1, dlig=1\"\n  -ms-font-feature-settings:     \"liga\", \"dlig\"\n  -webkit-font-feature-settings: \"liga\", \"dlig\"\n  -o-font-feature-settings:      \"liga\", \"dlig\"\n  font-feature-settings:         \"liga\", \"dlig\"\n",".page-content\n\tposition: relative\n\tz-index: 0\n\t// TODO: @bourbon\n\teasing(ease-in-cubic)\n\n.masthead__wrap\n\theight: 65px\n\ttop: 65px\n\n.masthead\n\t// TODO: @neat\n\tcol(18/18)\n\theight: 65px\n\n\t.thiago-logo\n\t\tcol(4/18)\n\t\tvertically-align()\n\t\topacity: 0.7\n\t\tfont-family: 'Lato', sans-serif\n\t\tfont-weight: 900\n\t\tfont-size: 1.5em\n\t\tspan\n\t\t\tfont-weight: 300\n\t\ttransition: all, .5s, linear\n\n\n\tnav\n\t\tcol(10/18)\n\t\tvertically-align()\n\t\tfont-size: 1rem\n\n\t\tul.toggle\n\t\t\ttext-align: center\n\t\t\tfont-family: 'Lato', sans-serif\n\t\t\tfont-weight: 400\n\t\t\tli, a\n\t\t\t\tpadding: 0 1em\n\t\t\t\tdisplay: inline\n\t\t\t\tcolor: #929292\n\t\t\t\tlist-style-type: none\n\t\t\t\ttext-decoration: none\n\t\t\t\ttransition: all, .25s, linear\n\t\t\t\t&:hover\n\t\t\t\t\tcolor: black\n\n\t\t\t\tinput\n\t\t\t\t\tdisplay: none\n\t\t\t\tinput[type=\"radio\"]:checked+label\n\t\t\t\t\tcolor: black\n\t\t\t\t\tfont-weight: bold\n\n.slide-down-content\n\t// slide-out topbar off-canvas\n\tposition: fixed\n\ttop: -400px\n\tleft: 0px\n\tcolor: black\n\tz-index: 1\n\theight: 400px\n\twidth: 100%\n\tpadding: 30px\n\ttext-align: center\n\ttransition: all, .5s, linear\n\n\tp.blurb\n\t\tfont-family: 'Lato', sans-serif\n\t\tfont-weight: 300\n\t\tfont-size: 2rem\n\t\tdisplay: inline-block\n\t\tcolor: black\n\t\tlist-style-type: none\n\t\tspan\n\t\t\tfont-weight: 900\n\t.coolform\n\t\tpadding-top: 50px\n\n\n#pulldowntoggler\n\tdisplay: none\n\t&:checked + .page-wrap\n\t\t.slide-down-content\n\t\t\ttop: 0px\n\t\t.masthead__wrapper\n\t\t\ttop: 400px\n\t\t.masthead\n\t\t\tborder-top: 4px solid $color-primary\n\t\t.page-content\n\t\t\tpadding-top: 400px\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",".coolform\n\tinput\n\t\tbackground: none\n\t\tborder: solid 4px $color-primary\n\t\tcolor: $color-primary\n\t\tpadding: 15px 40px\n\t\tfont-size: 18px\n\t\tdisplay: inline-block\n\t\t&:focus,\n\t\t&:active\n\t\t\toutline: none\n\t\t&[type=\"text\"],\n\t\t&[type=\"email\"]\n\t\t\tborder: none\n\t\t\tborder-bottom: solid 4px $color-primary\n\t\t&[type=\"submit\"]\n\t\t\t&:active\n\t\t\t\tcolor: white\n\t\t\t\tbackground: $color-primary\n\t.input-group\n\t\tdisplay: inline-block\n\t\tmargin-right: 20px\n\t\tposition: relative\n\t\tinput\n\t\t\tpadding: 15px 0px\n\t\tlabel\n\t\t\t// TODO: @bourbon\n\t\t\tposition: absolute\n\t\t\ttop: 50%\n\t\t\tleft: 0px\n\t\t\ttransform: translateY(-50%)\n\t\t\tfont-family: \"Lato\"\n\t\t\tfont-style: italic\n\t\t\tfont-size: 18px\n\t\t\tfont-weight: 300\n\t\t\tcolor: #999999\n\t\t\tpointer-events: none\n\t\t\t// TODO: @bourbon\n\t\t\ttransition: all, .5s, linear\n\t\tinput:focus + label,\n\t\tinput.has-value + label\n\t\t\ttop: -1*10px\n\t\t\tfont-size: 12px\n\t\t\tcolor: #aaaaaa\n","/*** Transitions *** */\n.masonry\n\ttransition-duration: 0.5s\n.masonry\n\ttransition-property: height, width\n.masonry .masonry__brick\n\ttransition-property: left, right, top\n.masonry\n\tmargin: 0 auto\n\tfont-size: 1rem\n\t&__brick\n\t\tdisplay: inline-block\n\t\tmargin-bottom: 18px\n\t\tfont-size: 0.58em\n\t\tline-height: 0.5em\n\t\tbackground: white\n\t\tposition: relative\n\t\toverflow: hidden\n\t\ttext-decoration: none\n\t\tcolor: black\n\t\tbox-shadow: 0px 1px 5px rgba(0, 0, 0, 0.7)\n\t\tborder: 3px solid white\n\t\th2, em\n\t\t\tposition: absolute\n\t\t\tbottom: 10px\n\t\t\tpadding: 0 6px\n\t\th2\n\t\t\tcolor: #555555\n\t\t\tfont-family: $helvetica\n\t\tem\n\t\t\tcolor: #777777\n\t\t\tfont-family: $georgia\n\t\t\tfont-style: normal\n\t\t&--cover\n\t\t\tbackground: url(http://placehold.it/1000x1000/bc9fff/fff) no-repeat top left\n\t\t\tbackground-color: whitesmoke\n\t\t\tmin-width: 100%\n\t\t\theight: 100%\n\t\t\tposition: absolute\n\t\t\ttop: 0px\n\t\t\tleft: 0px\n\t\t\ttransition: all, 0.075s, linear\n\t\t\t&:hover\n\t\t\t\ttop: -1*40px\n\t\t\t\tborder-bottom: 3px solid $color-primary\n.category--thoughts\n\twidth: 245px\n\theight: 660px\n.category--creations\n\twidth: 245px\n\theight: 660px\n.category--portfolio\n\twidth: 505px\n\theight: 245px\n",".site-footer\n\theight: 64px\n\twidth: 100%\n\tbackground: whitesmoke\n\tbox-shadow: 0px 0px 8px rgba(0, 0, 0, 0.2)\n\tposition: fixed\n\tbottom: 0px\n\tdisplay: block\n\tz-index: 99\n\t.site-footer__content\n\t\tvertical-align()\n\t\ta, a:visited\n\t\t\ttext-decoration: none\n\t\t.footer__logo\n\t\t\tfont-family: \"Lato\"\n\t\t\tfont-weight: 900\n\t\t\tfont-size: 2rem\n\t\t\tpadding: 10px\n\t\t\tvertical-align: middle\n\t\t.footer__blurb\n\t\t\tfont-family: \"Lato\"\n\t\t\tfont-weight: 300\n\t\t\tfont-size: 1.1rem\n\t\t\topacity: 0.6\n\t\t\ttext-transform: uppercase\n.pagination__btns\n\tlist-style-type: none\n\tfloat: right\n\tpadding-right: 20px\n\tmargin-top: -1*15px\n\tfont-size: 1.5em\n\topacity: 0.65\n\tli\n\t\tdisplay: inline-block\n\t\ta, a:visited, a:hover\n\t\t\ttext-decoration: none\n"]}